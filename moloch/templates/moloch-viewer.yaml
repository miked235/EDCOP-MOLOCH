apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "moloch.fullname" . }}-viewer
  labels:
    app: {{ template "moloch.name" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    role: viewer
spec:
  serviceName: {{ template "moloch.fullname" . }}-headless
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "moloch.name" . }}
      role: viewer
  template:
    metadata:
      name: {{ template "moloch.name" . }}-viewer
      labels:
        app: {{ template "moloch.name" . }}
        role: viewer
      annotations:
        networks: '[
        { "name": {{ .Values.networks.overlay | quote }} }
      ]'
    spec:
      containers:
      - name: moloch-viewer
        image: {{ .Values.images.moloch }}
        imagePullPolicy: Always
        securityContext:
          runAsUser: {{ .Values.molochConfig.runAsUser }}
          fsGroup: {{ .Values.molochConfig.fsGroup }}
        command: ["bash", "-c", "yes | cp /tmp/moloch/config.ini /data/moloch/etc/config.ini && /data/moloch/docker-entrypoint.sh"]
        env:
        - name: ES_HOST
          value: data-service
        - name: INTERFACE
          valueFrom:
            secretKeyRef:
              name: passive-interface
              key: interface
        - name: CLUSTER_PW
          value: {{ .Values.molochConfig.env.clusterpw }}
        - name: ADMIN_PW
          value: {{ .Values.molochConfig.env.adminpw }}
        - name: SENSOR
          value: "false"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - name: cport-8005
          containerPort: 8005
        resources:
          requests:
            cpu: {{ .Values.molochConfig.requests.cpu | quote }}
            memory: {{ .Values.molochConfig.requests.memory | quote }}
          limits:
            cpu: {{ .Values.molochConfig.limits.cpu | quote }}
            memory: {{ .Values.molochConfig.limits.memory | quote }}
        volumeMounts:
        - mountPath: /data/moloch/logs
          name: moloch-logs
        - mountPath: /tmp/moloch/config.ini
          subPath: config.ini
          name: moloch-config

      volumes:
      - name: moloch-logs
        hostPath:
          path: {{ .Values.volumes.logs }}
      - name: moloch-config
        configMap:
          name: {{ template "moloch.fullname" . }}-config
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      dnsConfig:
        searches:
          - {{ template "moloch.fullname" . }}-headless.{{ .Release.Namespace }}.svc.cluster.local
      nodeSelector:
        {{ .Values.nodeSelector.viewer }} : "true"
