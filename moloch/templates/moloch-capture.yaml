apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "moloch.fullname" . }}-capture
  labels:
    app: {{ template "moloch.name" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    role: capture
spec:
  serviceName: {{ template "moloch.fullname" . }}-headless
  replicas: {{ .Values.molochConfig.workerNodes }}
  selector:
    matchLabels:
      app: {{ template "moloch.name" . }}
      role: capture
  template:
    metadata:
      name: {{ template "moloch.name" . }}-capture
      labels:
        app: {{ template "moloch.name" . }}
        role: capture
      annotations:
        networks: '[
        { "name": {{ .Values.networks.overlay | quote }} },
        {{- if ne .Values.molochConfig.useHostNeworking true }}
        { "name": {{ .Values.networks.passive | quote }} }
        {{- end }}
      ]'
    spec:
      initContainers:
      - name: verifynode
        image: {{ .Values.images.runner }}
        env:
        - name: STARTUP_SCRIPT
          value: |
            #!/bin/bash
            set -e
            sleep 10
            if [ ! -f /sys/class/net/net0/operstate ]; then
            echo "Network interface 'net0' not found, exiting..."
            exit 1
            fi
            cp /etc/moloch/config/config.ini /etc/moloch/newconfig/config.ini
        volumeMounts:
        - mountPath: /etc/moloch/newconfig/
          name: moloch-final-config
        - mountPath: /etc/moloch/config/config.ini
          subPath: config.ini
          name: moloch-config
      containers:
      - name: moloch-capture
        image: {{ .Values.images.moloch }}
        command: ["/data/moloch/docker-entrypoint.sh"]
        imagePullPolicy: Always
        securityContext:
          capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RELEASE_NAME
          value: {{ template "moloch.fullname" . }}
        - name: ES_HOST
          value: data-service
        - name: CLUSTER_PW
          value: {{ .Values.molochConfig.env.clusterpw }}
        - name: ADMIN_PW
          value: {{ .Values.molochConfig.env.adminpw }}
        - name: SENSOR
          value: "true"
        - name: INTERFACE
          valueFrom:
            secretKeyRef:
              name: passive-interface
              key: interface
        ports:
        - name: cport-8005
          containerPort: 8005
        resources:
          requests:
            cpu: {{ .Values.molochConfig.requests.cpu | quote }}
            memory: {{ .Values.molochConfig.requests.memory | quote }}
          limits:
            cpu: {{ .Values.molochConfig.limits.cpu | quote }}
            memory: {{ .Values.molochConfig.limits.memory | quote }}
        volumeMounts:
        - mountPath: /data/moloch/raw
          name: molochraw
        - mountPath: /data/moloch/etc/
          name: moloch-final-config

      volumes:
      - name: molochraw
        hostPath:
          path: {{ .Values.volumes.raw }}
      - name: moloch-config
        configMap:
          name: {{ template "moloch.fullname" . }}-config
      - name: moloch-final-config
        emptyDir: {}     
      restartPolicy: Always
      {{- if .Values.molochConfig.useHostNeworking }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      nodeSelector:
        {{ .Values.nodeSelector.worker }} : "true"
